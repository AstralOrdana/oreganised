buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        maven { url='https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
//
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = project.oreganized_version
group = 'me.gleep.oreganized.modid' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'Oreganized_Mod-'+project.mc_version

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: project.parchment_version+'-'+project.mc_version

    runs {
        client {
            workingDirectory project.file('run')

            //arg "-mixin.config=oreganized.mixins.json" // For if organized ever needs mixins

            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'forge.logging.console.level', 'debug'

            mods {
                oreganized {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            //arg "-mixin.config=oreganized.mixins.json" // For if organized ever needs mixins

            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'forge.logging.console.level', 'debug'

            mods {
                oreganized {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            //property 'forge.logging.console.level', 'debug'

            args '--mod', 'oreganized', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/'), '--existing', file('src/generated/resources/')

            environment 'target', 'fmluserdevdata'

            mods {
                oreganized {
                    source sourceSets.main
                }
            }
        }
    }
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

// Include resources generated by data generators.
sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    maven {
        url='https://repo.spongepowered.org/repository/maven-public/'
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }

    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-${project.mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${project.mc_version}:${jei_version}")

    implementation fg.deobf("curse.maven:detail-armor-bar-forge-520755:3723059")
    implementation fg.deobf("curse.maven:farmers-delight-398521:3834150")

    // For testing and showcasing with pretty shaders:
    runtimeOnly fg.deobf("curse.maven:oculus-581495:3821406")
    runtimeOnly fg.deobf("curse.maven:rubidium-574856:3749094")


    //annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}
/*
mixin {
    add sourceSets.main, "oreganized.refmap.json"
    config 'oreganized.mixins.json'
}
 */


jar {
    manifest {
        attributes([
                "Specification-Title"     : "oreganized",
                "Specification-Vendor"    : "oreganizedsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "oreganizedsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
                //"MixinConfigs": "oreganized.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
