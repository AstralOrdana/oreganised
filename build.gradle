buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: "${forgegradle_version}", changing: true
        classpath "org.spongepowered:mixingradle:${mixingradle_version}"
    }
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'maven-publish'

archivesBaseName = "${mod_name} ${minecraft_version}"

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"

    config "${mod_id}.mixins.json"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: minecraft_version

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            args "-mixin.config=${mod_id}.mixins.json"
            args "-mixin.config=galenacapes.forge.mixins.json"
            mods {
                modClientRun {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
            args "-mixin.config=${mod_id}.mixins.json"
            mods {
                modServerRun {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            taskName 'Data'
            args "-mixin.config=${mod_id}.mixins.json"
            mods {
                modDataRun {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        name = "Curse Maven"
        url = "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"

    /// Compatabilities
    implementation fg.deobf("curse.maven:detailab-520755:3723059")

    compileOnly fg.deobf("curse.maven:farmers-delight-398521:3999153")
    runtimeOnly fg.deobf("curse.maven:farmers-delight-398521:3999153")

    //compileOnly fg.deobf("curse.maven:modest-mining-533775:4127197")
    //runtimeOnly fg.deobf("curse.maven:modest-mining-533775:4127197")
    //runtimeOnly fg.deobf("curse.maven:geckolib-388172:4181370")

    compileOnly fg.deobf("curse.maven:shield-expansion-583318:4046470")
    runtimeOnly fg.deobf("curse.maven:shield-expansion-583318:4046470")

    compileOnly fg.deobf("curse.maven:create-328085:4174329")
    runtimeOnly fg.deobf("curse.maven:create-328085:4174329")
    runtimeOnly fg.deobf("curse.maven:flywheel-486392:4174748")

    compileOnly fg.deobf("curse.maven:quark-243121:3840125")
    runtimeOnly fg.deobf("curse.maven:quark-243121:3840125")
    runtimeOnly fg.deobf("curse.maven:autoreglib-250363:3642382")

    //compileOnly fg.deobf("curse.maven:tinkers-construct-74072:3829979")
    //runtimeOnly fg.deobf("curse.maven:tinkers-construct-74072:3829979")
    //runtimeOnly fg.deobf("curse.maven:mantle-74924:3829975")

    /*
        If 'Data' fails to run try comment out the below dependencies
     */
    runtimeOnly fg.deobf("curse.maven:supplementaries-412082:4216131")
    runtimeOnly fg.deobf("curse.maven:selene-499980:3842421")
    ///

    /// Utilities for the development environment
    runtimeOnly fg.deobf("curse.maven:jade-324717:4082408")
    // compile against the JEI API but do not include it at runtime
    compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}"))
    // at runtime, use the full JEI jar for Forge
    runtimeOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}"))

    runtimeOnly fg.deobf("curse.maven:catalogue-459701:3803098")
    runtimeOnly fg.deobf("curse.maven:configured-457570:4010624")

    runtimeOnly fg.deobf("curse.maven:oculus-581495:4110355")
    runtimeOnly fg.deobf("curse.maven:rubidium-574856:4024781")
    ///
}

jar {
    manifest {
        attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestampe'              : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Build-On-Minecraft'      : minecraft_version
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}

// Disables Gradle's custom module metadata from being published to maven. The
// metadata includes mapped dependencies which are not reasonably consumable by
// other mod developers.
tasks.withType(GenerateModuleMetadata) {
    enabled = false
}
